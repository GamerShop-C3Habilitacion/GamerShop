{"ast":null,"code":"var _jsxFileName = \"/Users/victormanuelestradavarela/Documents/MinTic/habilitacion/src/home/components/CardFooter.js\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardFooter = ({\n  id,\n  price,\n  category,\n  isLoggedIn,\n  productos,\n  carrito,\n  setCarrito\n}) => {\n  const AddProducto = e => {\n    const productoAgregar = productos.find(p => p.id == e.target.id);\n    const productoAgregado = carrito.find(p => p.id == productoAgregar.id);\n\n    if (productoAgregado) {\n      // producto agregado  \n      productoAgregado.cantidad++;\n      productoAgregado.total = productoAgregado.price * productoAgregado.cantidad;\n      setCarrito([...carrito]);\n    } else {\n      // producto  no agregado\n      const producto = {\n        id: productoAgregar.id,\n        nombre: productoAgregar.title,\n        cantidad: 1,\n        precio: productoAgregar.price,\n        total: productoAgregar.price\n      };\n      setCarrito([...carrito, producto]);\n    }\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: id,\n      variant: \"primary\",\n      onClick: AddProducto,\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      pill: true,\n      bg: \"secondary\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = CardFooter;\nexport default CardFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFooter\");","map":{"version":3,"sources":["/Users/victormanuelestradavarela/Documents/MinTic/habilitacion/src/home/components/CardFooter.js"],"names":["Button","Badge","CardFooter","id","price","category","isLoggedIn","productos","carrito","setCarrito","AddProducto","e","productoAgregar","find","p","target","productoAgregado","cantidad","total","producto","nombre","title","precio"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA,OAA7C;AAAsDC,EAAAA;AAAtD,CAAD,KAAuE;AAEtF,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACxB,UAAMC,eAAe,GAAIL,SAAS,CAACM,IAAV,CAAiBC,CAAD,IAAOA,CAAC,CAACX,EAAF,IAAQQ,CAAC,CAACI,MAAF,CAASZ,EAAxC,CAAzB;AACA,UAAMa,gBAAgB,GAAGR,OAAO,CAACK,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACX,EAAF,IAAQS,eAAe,CAACT,EAA5C,CAAzB;;AACA,QAAIa,gBAAJ,EAAqB;AAChB;AACDA,MAAAA,gBAAgB,CAACC,QAAjB;AACAD,MAAAA,gBAAgB,CAACE,KAAjB,GACCF,gBAAgB,CAACZ,KAAjB,GAAyBY,gBAAgB,CAACC,QAD3C;AAEAR,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,CAAV;AAEH,KAPD,MAOK;AAAE;AAEH,YAAMW,QAAQ,GAAG;AACbhB,QAAAA,EAAE,EAAES,eAAe,CAACT,EADP;AAEbiB,QAAAA,MAAM,EAAER,eAAe,CAACS,KAFX;AAGbJ,QAAAA,QAAQ,EAAC,CAHI;AAGDK,QAAAA,MAAM,EAAEV,eAAe,CAACR,KAHvB;AAIbc,QAAAA,KAAK,EAAEN,eAAe,CAACR;AAJV,OAAjB;AAMCK,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaW,QAAb,CAAD,CAAV;AACJ;AACH,GApBD;;AAsBA,MAAIb,UAAJ,EAAe;AACX,wBAAM,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAGH,EAAb;AAAiB,MAAA,OAAO,EAAC,SAAzB;AAAmC,MAAA,OAAO,EAAEO,WAA5C;AAAA,sBACAN,KADA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAEH,GAHD,MAGK;AACD,wBACI,QAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAY,MAAA,EAAE,EAAC,WAAf;AAAA,gBACCC;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AAEJ,CAnCD;;KAAMH,U;AAoCN,eAAeA,UAAf","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\n\n\nconst CardFooter = ({id, price, category, isLoggedIn, productos, carrito, setCarrito}) => {\n    \n    const AddProducto = (e) => {\n       const productoAgregar =  productos.find ((p) => p.id == e.target.id);\n       const productoAgregado = carrito.find((p) => p.id == productoAgregar.id)\n       if (productoAgregado){\n            // producto agregado  \n           productoAgregado.cantidad ++;\n           productoAgregado.total =\n            productoAgregado.price * productoAgregado.cantidad;\n           setCarrito([...carrito]);\n\n       }else{ // producto  no agregado\n\n           const producto = {\n               id: productoAgregar.id, \n               nombre: productoAgregar.title, \n               cantidad:1, precio: productoAgregar.price, \n               total: productoAgregar.price\n            };\n            setCarrito([...carrito, producto]);\n       }\n    };\n       \n    if (isLoggedIn){\n        return<Button id ={id} variant=\"primary\" onClick={AddProducto}>\n            ${price}</Button>;\n    }else{\n        return(\n            <Badge pill bg=\"secondary\">\n            {category}\n            </Badge>\n        );\n    }\n        \n};\nexport default CardFooter;"]},"metadata":{},"sourceType":"module"}